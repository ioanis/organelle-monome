#N canvas 186 208 955 707 10;
#X obj 383 102 serialosc;
#X obj 383 128 routeOSC /monome/grid/key;
#X text 385 159 x \, y \, state;
#X msg 385 183 \$2 \$1 \$3;
#X text 453 181 y \, x \, state;
#X obj 385 215 route 6 7;
#N canvas 274 343 608 821 toggles 0;
#X msg 37 117 \$3 \$2 \$1;
#X text 102 116 state \, x \, y;
#X obj 37 146 route 1;
#X text 92 145 if a key-down pass x \, y out left;
#X obj 70 253 * 16;
#X obj 37 228 unpack;
#X text 102 252 multiply y value by 16;
#X obj 37 279 +;
#X text 67 278 add x value to y*16;
#X floatatom 37 304 5 0 0 0 - - -, f 5;
#X text 78 303 this is our 'index' for the current key;
#X obj 37 763 tabwrite grid;
#X obj 37 426 tabread grid;
#X obj 37 389 t f f;
#X text 120 425 look up the stored value at the pressed index;
#X text 82 389 first set the index to write to \, and prepare to draw
an LED;
#X floatatom 37 457 5 0 0 0 - - -, f 5;
#X text 84 456 the stored state;
#X obj 37 485 == 0;
#X text 72 483 invert the stored state;
#X text 126 764 and write the new state to the table;
#X obj 284 577 / 16;
#X obj 284 602 int;
#X obj 246 623 % 16;
#X obj 227 657 pack f f f;
#X msg 227 683 \$2 \$3 \$1;
#X text 397 96 this is the table itself;
#X text 291 549 convert our index back into x \, y coordinates;
#X text 299 683 the send the value to the grid;
#X obj 37 36 inlet;
#X obj 227 708 outlet;
#X text 321 575 we divide by 16 to determine the row;
#X text 292 624 and use the remainder to determine the column;
#X obj 246 551 t f f;
#X text 274 707 x \, y \, state to serialosc;
#X text 78 36 y \, x \, state from the top 6 rows;
#X obj 459 73 table grid 128;
#X connect 0 0 2 0;
#X connect 2 0 5 0;
#X connect 4 0 7 1;
#X connect 5 0 7 0;
#X connect 5 1 4 0;
#X connect 7 0 9 0;
#X connect 9 0 13 0;
#X connect 12 0 16 0;
#X connect 13 0 12 0;
#X connect 13 1 11 1;
#X connect 13 1 33 0;
#X connect 16 0 18 0;
#X connect 18 0 11 0;
#X connect 18 0 24 0;
#X connect 21 0 22 0;
#X connect 22 0 24 2;
#X connect 23 0 24 1;
#X connect 24 0 25 0;
#X connect 25 0 30 0;
#X connect 29 0 0 0;
#X connect 33 0 23 0;
#X connect 33 1 21 0;
#X restore 436 256 pd toggles;
#X msg 436 289 /monome/grid/led/set \$1 \$2 \$3;
#X obj 436 321 s osc-out;
#X obj 383 76 r osc-out;
#X obj 91 311 counter 0 15;
#X floatatom 91 351 5 0 0 0 - - -, f 5;
#X text 134 351 play position;
#X obj 91 396 t f b;
#X obj 91 496 s osc-out;
#X obj 399 492 s osc-out;
#N canvas 1055 488 555 450 triggers 0;
#X obj 119 290 tabread grid;
#X obj 97 227 * 16;
#X obj 119 263 +;
#X obj 19 148 uzi 6;
#X obj 87 98 t b f;
#X obj 51 177 - 1;
#X obj 51 201 t f f;
#X obj 87 37 inlet;
#X obj 57 373 outlet;
#X text 130 36 current play position;
#X text 130 97 first store the x value to offset into the table;
#X text 104 146 uzi shoots out 6 numbers sequentially starting at 1
;
#X text 83 175 subtract 1 as the grid is '0 referenced';
#X text 96 200 first store the current uzi value representing the row
;
#X text 137 225 multiply by 16 to skip through the table by rows;
#X text 148 262 add the play position to the current row;
#X text 212 291 find the state at that index location;
#X text 104 373 send to serialosc for display;
#X obj 57 326 gate;
#X text 98 324 only send the location if the toggle is set;
#X connect 0 0 18 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 2 5 0;
#X connect 4 0 3 0;
#X connect 4 1 2 1;
#X connect 5 0 6 0;
#X connect 6 0 18 1;
#X connect 6 1 1 0;
#X connect 7 0 4 0;
#X connect 18 0 8 0;
#X restore 399 427 pd triggers;
#X msg 399 460 /monome/grid/led/set \$1 6 1;
#X obj 399 399 t f b;
#N canvas 1011 432 670 568 cutting 0;
#X obj 243 75 unpack;
#X obj 276 104 * 2;
#X obj 276 131 - 1;
#X obj 276 159 t b f;
#X obj 276 187 accum;
#X obj 210 223 gate 2;
#X obj 243 263 t b f;
#X obj 195 301 f;
#X msg 195 327 min \$1;
#X msg 270 368 max \$1;
#X msg 55 261 jam \$1;
#X obj 243 41 inlet;
#X obj 149 437 outlet;
#X text 105 260 set play position;
#X text 247 327 set loop start;
#X text 320 366 set loop end;
#X text 322 186 accumulate current held keys;
#X text 257 222 left if 1 key \, right if 2 keys held;
#X text 225 300 store the 1st press as a potential loop start;
#X text 38 520 http://monome.org;
#X text 38 503 grid studies 3-4-1;
#X connect 0 0 5 1;
#X connect 0 1 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 4 1;
#X connect 4 0 5 0;
#X connect 5 0 7 1;
#X connect 5 0 10 0;
#X connect 5 1 6 0;
#X connect 6 0 7 0;
#X connect 6 1 9 0;
#X connect 7 0 8 0;
#X connect 8 0 12 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X connect 11 0 0 0;
#X restore 305 255 pd cutting;
#X text 508 255 toggle bank;
#X text 451 399 trigger events;
#X text 28 602 http://monome.org;
#X obj 339 581 outlet triggers;
#X msg 512 70 reset;
#X msg 243 30 /sys/rotation 180;
#X obj 512 12 loadbang;
#X obj 21 21 r reset;
#X msg 13 63 0;
#X obj 52 64 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 119 115 inlet step;
#X text 30 582 based on grid studies 3-4;
#X obj 669 74 inlet reset;
#X text 204 314 16 spaces for monome 128;
#X msg 490 428 /monome/grid/led/level/row 0 6 5 5 5 5 5 5 5 5 5 5 5
5 5 5 5 5, f 64;
#X msg 123 423 /monome/grid/led/row 0 7 0 0;
#X msg 91 452 /monome/grid/led/set \$1 7 1;
#X obj 512 37 delay 300;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 3 0 5 0;
#X connect 5 1 19 0;
#X connect 5 2 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 9 0 0 0;
#X connect 10 0 11 0;
#X connect 11 0 13 0;
#X connect 11 0 18 0;
#X connect 13 0 36 0;
#X connect 13 1 35 0;
#X connect 16 0 17 0;
#X connect 16 0 23 0;
#X connect 17 0 15 0;
#X connect 18 0 16 0;
#X connect 18 1 34 0;
#X connect 19 0 10 0;
#X connect 24 0 0 1;
#X connect 25 0 0 0;
#X connect 26 0 37 0;
#X connect 27 0 28 0;
#X connect 27 0 29 0;
#X connect 28 0 11 0;
#X connect 29 0 10 2;
#X connect 30 0 10 0;
#X connect 32 0 0 1;
#X connect 34 0 15 0;
#X connect 35 0 14 0;
#X connect 36 0 14 0;
#X connect 37 0 24 0;
